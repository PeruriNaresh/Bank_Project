/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.96
 * Generated at: 2024-10-27 16:33:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bank_dto.User;
import bank_dto.Bank;

public final class Transaction_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("bank_dto.Bank");
    _jspx_imports_classes.add("bank_dto.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Transfer</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("    font-family: 'Arial', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    height: 100vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-container {\r\n");
      out.write("	\r\n");
      out.write("    background: linear-gradient(135deg, #ff7e5f, #feb47b);	\r\n");
      out.write("    padding: 30px;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.1);\r\n");
      out.write("    width: 350px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h1 {\r\n");
      out.write("    color: #333;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("    font-size: 24px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("label {\r\n");
      out.write("    text-align: left;\r\n");
      out.write("    color: #555;\r\n");
      out.write("    margin: 10px 0 5px;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input {\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    border: 1px solid #ddd;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    margin-bottom: 15px;\r\n");
      out.write("    outline: none;\r\n");
      out.write("    transition: border-color 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input:focus {\r\n");
      out.write("    border-color: #ff7e5f;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button {\r\n");
      out.write("    padding: 12px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    color: white;\r\n");
      out.write("    background-color: #ff7e5f;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: background 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button:hover {\r\n");
      out.write("    background-color: #feb47b;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"form-container\">\r\n");
      out.write("    <h1>Enter Account Transfer Details</h1>\r\n");
      out.write("    <form action=\"transfer\" method=\"post\">\r\n");
      out.write("    	");
 Bank bank =(Bank)session.getAttribute("bank");
    	User user=(User)session.getAttribute("user");
    	if(bank!=null && bank.getAccountnumber()!=0)
    	{
      out.write("\r\n");
      out.write("        <label for=\"anotherAccountNumber\">Another Account Number</label>\r\n");
      out.write("        <input type=\"tel\" id=\"anotherAccountNumber\" minlength=12 maxlength=12 name=\"anotherAccountNumber\" placeholder=\"Enter account number\" required>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"anotherIFSCCode\">Another IFSC Code</label>\r\n");
      out.write("        <input type=\"text\" id=\"anotherIFSCCode\" name=\"ifsc\" placeholder=\"Enter IFSC code\" required>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"amount\">Amount</label>\r\n");
      out.write("        <input type=\"number\" id=\"amount\" name=\"amount\" placeholder=\"Enter amount\" required>\r\n");
      out.write("        \r\n");
      out.write("        <input type=\"text\" id=\"date\" name=\"date\" hidden=\"true\">\r\n");
      out.write("        <input type=\"text\" id=\"time\" name=\"time\" hidden=\"true\">\r\n");
      out.write("        \r\n");
      out.write("		<br>\r\n");
      out.write("        <button type=\"submit\" onclick=\"fun(");
      out.print(user.getPassword());
      out.write(")\">Submit</button>\r\n");
      out.write("		");

		
		}
    	else
    	{
    		out.println("<h3 style='color:black;'>Create account to make transactions</h3>");
    	}
    	String msg=(String)request.getAttribute("msg");
		if(msg!=null)
		{
			out.println("<p>"+msg+"</p>");
		}
      out.write("\r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("	function fun(password)\r\n");
      out.write("	{\r\n");
      out.write("		var pass=window.prompt(\"enter the password to move forward\");\r\n");
      out.write("		if(pass==password)\r\n");
      out.write("		{\r\n");
      out.write("			window.history.forward();\r\n");
      out.write("		}\r\n");
      out.write("		else\r\n");
      out.write("		{\r\n");
      out.write("			event.preventDefault();\r\n");
      out.write("			alert(\"invalid password try again\");\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	var date=new Date();\r\n");
      out.write("	var months=[\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n");
      out.write("	var month=date.getMonth();\r\n");
      out.write("	var day=date.getDate();\r\n");
      out.write("	var year=date.getFullYear();\r\n");
      out.write("	var min=date.getMinutes();\r\n");
      out.write("	var hours=date.getHours();\r\n");
      out.write("	var sec=date.getSeconds();\r\n");
      out.write("	document.getElementById(\"date\").value=(day+\"-\"+month+\"-\"+year);\r\n");
      out.write("	document.getElementById(\"time\").value=(hours+\":\"+min+\":\"+sec);\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
