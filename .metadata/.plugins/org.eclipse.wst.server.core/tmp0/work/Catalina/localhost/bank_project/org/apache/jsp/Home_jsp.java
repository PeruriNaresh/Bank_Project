/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.96
 * Generated at: 2024-10-27 05:50:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bank_dto.Bank;
import bank_dto.User;

public final class Home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("bank_dto.Bank");
    _jspx_imports_classes.add("bank_dto.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Home page</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("    font-family: 'Arial', sans-serif;\r\n");
      out.write("    background: linear-gradient(to right, #ff7e5f, #feb47b);\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    height: 100vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("header {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    top: 0;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    background-color: #333;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: space-between; /* Space between navbar and welcome text */\r\n");
      out.write("    align-items: center; /* Center align items vertically */\r\n");
      out.write("    padding: 10px; /* Added padding to header */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".welcome-text {\r\n");
      out.write("    color: white; /* Color of welcome text */\r\n");
      out.write("    font-size: 18px; /* Font size of welcome text */\r\n");
      out.write("    margin-left: 20px; /* Space on the left of welcome text */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: flex-end; /* Aligns items to the right */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav-item {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    margin-left: 20px; /* Adds space between nav items */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav-btn {\r\n");
      out.write("    background-color: #ff7e5f;\r\n");
      out.write("    border: none;\r\n");
      out.write("    color: white;\r\n");
      out.write("    padding: 10px 15px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    transition: background 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav-btn:hover {\r\n");
      out.write("    background-color: #feb47b;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav-links {\r\n");
      out.write("    display: none;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("    background-color: #444;\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    top: 40px;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    width: 250px; /* Increased width for dropdown */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav-item:hover .nav-links {\r\n");
      out.write("    display: flex;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav-links button {\r\n");
      out.write("    background-color: #ff7e5f;\r\n");
      out.write("    border: none;\r\n");
      out.write("    color: white;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    margin: 5px 0;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: background 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav-links button:hover {\r\n");
      out.write("    background-color: #feb47b;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Styles for password input */\r\n");
      out.write(".password-input \r\n");
      out.write("{\r\n");
      out.write("    display: none; /* Hide by default */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav-item:hover .password-input {\r\n");
      out.write("	height:20vh;\r\n");
      out.write("    display: flex; /* Show password input on hover */\r\n");
      out.write("    transform: translateX(-7vw);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".password-input label {\r\n");
      out.write("    color: white; /* Label color */\r\n");
      out.write("    margin-bottom: 5px; /* Space below label */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".password-input input {\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    outline: none;\r\n");
      out.write("    width: 100%; /* Full width */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".main {\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    margin-top: 100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h1 {\r\n");
      out.write("    color: white;\r\n");
      out.write("    font-size: 48px;\r\n");
      out.write("    margin-bottom: 40px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search-bar {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    margin-bottom: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search-bar input {\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    width: 300px;\r\n");
      out.write("    border-radius: 5px 0 0 5px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    outline: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search-bar button {\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    background-color: #ff7e5f;\r\n");
      out.write("    color: white;\r\n");
      out.write("    border-radius: 0 5px 5px 0;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: background 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search-bar button:hover {\r\n");
      out.write("    background-color: #feb47b;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".create-account button {\r\n");
      out.write("    padding: 15px 30px;\r\n");
      out.write("    background-color: #ff7e5f;\r\n");
      out.write("    color: white;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: background 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".create-account button:hover {\r\n");
      out.write("    background-color: #feb47b;\r\n");
      out.write("}\r\n");
      out.write("#trans\r\n");
      out.write("{\r\n");
      out.write("	transform:translate(-19vw,-2vh);\r\n");
      out.write("	display:none;\r\n");
      out.write("}\r\n");
      out.write("#trans:hover\r\n");
      out.write("{\r\n");
      out.write("	display:inline;\r\n");
      out.write("}\r\n");
      out.write("#transout:hover+#trans\r\n");
      out.write("{\r\n");
      out.write("	display:inline;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("	");
User user=(User)session.getAttribute("user");
	String name=user.getName();
      out.write("\r\n");
      out.write("    <div class=\"welcome-text\">Welcome ");
      out.print(name);
      out.write("</div> <!-- Added welcome text -->\r\n");
      out.write("    <div class=\"navbar\">\r\n");
      out.write("        <div class=\"nav-item\">\r\n");
      out.write("            <button class=\"nav-btn\">☰ Menu</button>\r\n");
      out.write("            <div class=\"nav-links\">\r\n");
      out.write("                <a href=\"Profile.jsp\"><button>Profile</button></a>\r\n");
      out.write("                <a href=\"Update.jsp\"><button>Update</button></a>\r\n");
      out.write("                <a href=\"Delete.jsp\"><button>Delete</button></a>\r\n");
      out.write("                <a href=\"index.jsp\"><button onclick=\"fun()\">Logout</button></a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"nav-item\">\r\n");
      out.write("            <button class=\"nav-btn\">Account</button>\r\n");
      out.write("            <div class=\"nav-links\">\r\n");
      out.write("                <a href=\"accountdetails.jsp\"><button>Account Details</button></a>\r\n");
      out.write("                <button id=\"transout\">Transaction</button>\r\n");
      out.write("                <div id=\"trans\" class=\"nav-links\">\r\n");
      out.write("                	<a href=\"Transaction.jsp\"><button>To Other Account</button></a>\r\n");
      out.write("                	<button>To Self Account</button>\r\n");
      out.write("                </div>\r\n");
      out.write("                <a href=\"history\"><button>History</button></a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"nav-item\">\r\n");
      out.write("            <button class=\"nav-btn\">Balance Enquiry</button> <!-- New Balance Enquiry button -->\r\n");
      out.write("            <div class=\"nav-links password-input\">\r\n");
      out.write("            	");
String pass= ((User)session.getAttribute("user")).getPassword();
            	Bank bank=(Bank)session.getAttribute("bank");
            	int balance=bank.getBalance();
            	long account=bank.getAccountnumber();
            	if(account>0)
            	{
      out.write("\r\n");
      out.write("	                <label for=\"password\" id=\"lab\">Enter the Password:</label>\r\n");
      out.write("		            <input type=\"password\" id=\"password\" name=\"pass\" placeholder=\"Password\">\r\n");
      out.write("		            <h2 id=\"bal\" style=\"display:none;color:white\">₹ ");
      out.print(balance);
      out.write(". INR</h2>\r\n");
      out.write("		            <button id=\"sub\" onclick=\"fun1(");
      out.print(pass);
      out.write(")\">Submit</button>\r\n");
      out.write("	            ");
}
	            else
	            {
	            	out.println("<h3 style='color:white'>no account to fetch balance from</h3>");
	            }
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("<div class=\"main\">\r\n");
      out.write("    <h1>Welcome to Our Homepage</h1>\r\n");
      out.write("    <div class=\"search-bar\">\r\n");
      out.write("        <input type=\"text\" placeholder=\"Search...\">\r\n");
      out.write("        <button>Search</button>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
String status= (String)session.getAttribute("status");
		if(status!="created")
		{
	
      out.write("\r\n");
      out.write("    <div class=\"create-account\">\r\n");
      out.write("        <a href=\"bankaccount.jsp\"><button>Create Account</button></a>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
 }
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("	function fun1(pass)\r\n");
      out.write("	{\r\n");
      out.write("		var password=document.getElementById(\"password\");\r\n");
      out.write("		var sub=document.getElementById(\"sub\");\r\n");
      out.write("		var bal=document.getElementById(\"bal\");\r\n");
      out.write("		var lab=document.getElementById(\"lab\");\r\n");
      out.write("		if(pass==password.value)\r\n");
      out.write("		{\r\n");
      out.write("			lab.style.display=\"none\";\r\n");
      out.write("			password.style.display=\"none\";\r\n");
      out.write("			bal.style.display=\"block\";\r\n");
      out.write("			sub.style.display=\"none\";\r\n");
      out.write("		}\r\n");
      out.write("		else\r\n");
      out.write("		{\r\n");
      out.write("			password.value=\"\";\r\n");
      out.write("			password.setAttribute(\"placeholder\",\"invalid password\");\r\n");
      out.write("			password.style.border=\"1px solid red\";\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
